{
  "moduleInfo": {
    "moduleName": "Asura Scans",
    "moduleInitials": "AS",
    "moduleDesc": "A module to read manwha and manhua from Asura Scans.",
    "developer": "tistay",
    "moduleID": "142424748807289",
    "moduleImage": "https://static.wikia.nocookie.net/asurascans/images/e/e6/Site-logo.png/revision/latest?cb=20220502044334",
    "moduleVersion": 1.13,
    "moduleLenguage": "ENG",
    "changelog":"1.13 - Testing dynamic ID support.",
    "moduleType": "Image",
    "baseURL": "https://www.asurascans.com/",
    "moduleDeveloperSite": "https://github.com/tistay/zetsu-modules",
    "UpdateSite": "https://raw.githubusercontent.com/tistay/zetsu-modules/main/AsuraScans/moduleTemplate.json",
    "preferedServer": "",
    "preferedDownloadServer": "",
    "blackListed": [
      ""
    ]
  },
  "global": {
    "variables": [
      {
        "key": "",
        "value": ""
      }
    ],
    "cookies": [
      {
        "key": "",
        "value": ""
      }
    ],
    "headers": [
      {
        "key": "",
        "value": ""
      }
    ]
  },
  "mainPage": [
    {
      "request": {
        "url": "https://www.asurascans.com/",
        "method": "get",
        "headers": [
          {
            "key": "",
            "value": ""
          }
        ],
        "httpBody": null
      },
      "extra": {
        "commands": [
          {
            "commandName": "",
            "params": [
              {
                "key": "",
                "value": ""
              }
            ]
          }
        ],
        "extraInfo": [
          {
            "key": "",
            "value": ""
          }
        ]
      },
      "javascriptConfig": {
        "removeJavascript": true,
        "loadInWebView": false,
        "javaScript": "try { /* JAVASCRIPT STARTS */ const DefaultLayouts={ultraWideFull:'ultraWideFull',ultraWide:'ultraWide',wideFull:'wideFull',wide:'wide',wideStrechedFull:'wideStrechedFull',wideStrechedFullDouble:'WideStrechedFullDouble',wideStreched:'wideStreched',wideStrechedDouble:'wideStrechedDouble',wideStrechedFullList:'wideStrechedFullList',wideStrechedList:'wideStrechedList',doublets:'doublets',doubletsDouble:'doubletsDouble',doubletsFull:'doubletsFull',doubletsFullDouble:'doubletsFullDouble',doubletsConstant:'doubletsConstant',doubletsDoubleConstant:'doubletsDoubleConstant',doubletsFullConstant:'doubletsFullConstant',doubletsFullDoubleConstant:'doubletsFullDoubleConstant',longDoublets:'longDoublets',longDoubletsDouble:'longDoubletsDouble',longDoubletsFull:'longDoubletsFull',longDoubletsFullDouble:'longDoubletsFullDouble',longDoubletsConstant:'longDoubletsConstant',longDoubletsDoubleConstant:'longDoubletsDoubleConstant',longDoubletsFullConstant:'longDoubletsFullConstant',longDoubletsFullDoubleConstant:'longDoubletsFullDoubleConstant',triplets:'triplets',tripletsDouble:'tripletsDouble',tripletsFull:'tripletsFull',tripletsFullDouble:'tripletsFullDouble',tripletsConstant:'tripletsConstant',tripletsDoubleConstant:'tripletsDoubleConstant',tripletsFullConstant:'tripletsFullConstant',tripletsFullDoubleConstant:'tripletsFullDoubleConstant',longTriplets:'longTriplets',longTripletsDouble:'longTripletsDouble',longTripletsFull:'longTripletsFull',longTripletsFullDouble:'longTripletsFullDouble',longTripletsConstant:'longTripletsConstant',longTripletsDoubleConstant:'longTripletsDoubleConstant',longTripletsFullConstant:'longTripletsFullConstant',longTripletsFullDoubleConstant:'longTripletsFullDoubleConstant',none:''},CellDesings={Special1:'Special1',Special2:'Special2',Special3:'Special3',CELLHelperText:'CELLHelperText',small1:'small1',small2:'small2',normal1:'normal1',normal2:'normal2',normal3:'normal3',normal4:'normal4',normal5:'normal5',normal6:'normal6',normal7:'normal7',wide1:'wide1',wide2:'wide2',wide3:'wide3',wide4:'wide4',wide5:'wide5',wide6:'wide6',wide7:'wide7',wide8:'wide8',wide9:'wide9',wide10:'wide10',wide11:'wide11'},Paging={leading:'leading',centered:'centered',none:''},Orientation={horizontal:'horizontal',vertical:'vertical'};function MainPage(e,t,l,i){this.request=e,this.extra=t,this.javascriptConfig=l,this.output=i}function ModuleRequest(e,t,l,i){this.url=e,this.method=t,this.headers=l,this.httpBody=i}function Extra(e,t){this.commands=e,this.extraInfo=t}function Commands(e,t){this.commandName=e,this.params=t}function JavascriptConfig(e,t,l){this.removeJavascript=e,this.loadInWebView=t,this.javaScript=l}function KeyValue(e,t){this.key=e,this.value=t}function Output(e,t,l,i,n,o,u){this.cellDesing=e,this.orientation=t,this.defaultLayout=l,this.paging=i,this.section=n,this.layout=o,this.data=u}function Section(e,t){this.sectionName=e,this.separator=t}function Layout(e,t,l,i,n,o,u,s,a,r,d){this.insets=e,this.visibleCellsWidthS=t,this.visibleCellsWidthM=l,this.visibleCellsWidthL=i,this.visibleCellsHeight=n,this.heightForVisibleCells=o,this.cellSize=u,this.ratio=s,this.constant=a,this.horizontalSpacing=r,this.verticalSpacing=d}function Insets(e,t,l,i){this.top=e,this.bottom=t,this.left=l,this.right=i}function Size(e,t){this.width=e,this.height=t}function Ratio(e,t,l){this.inRelation=e,this.number1=t,this.number2=l}function Data(e,t,l,i,n,o,u,s,a,r){this.image=e,this.title=t,this.description=l,this.field1=i,this.field2=n,this.field3=o,this.field4=u,this.isChapter=s,this.link=a,this.openInWebView=r}function quickData(e,t,l,i,n='unknown',o='unknown'){return new Data(t,l,o,i,n,'unknown','unknown',!1,e)}function shuffle(e){var t,l,i;for(i=e.length-1;i>0;i--)t=Math.floor(Math.random()*(i+1)),l=e[i],e[i]=e[t],e[t]=l;return e}var savedData=document.getElementById('ketsu-final-data'),parsedJson=JSON.parse(savedData.innerHTML);let output=[],emptyKeyValue=[new KeyValue('','')],dataArrayT=[],trending=document.querySelectorAll('.bs');for(t of trending){let e=t.querySelector('.limit > img').getAttribute('src'),l=t.querySelector('a').getAttribute('title'),i=t.querySelector('a').href,n=t.querySelector('.type').innerHTML;e=new ModuleRequest(e,'get',emptyKeyValue,null),i=new ModuleRequest(i,'get',emptyKeyValue,null),dataArrayT.push(quickData(i,e,'',l,n))}output.push(new Output(CellDesings.Special3,Orientation.horizontal,DefaultLayouts.none,Paging.centered,new Section('Trending Today',!0),null,dataArrayT));let popularWeek=document.querySelector('#wpop-items > .wpop-weekly').querySelectorAll('li'),dataArrayP=[];for(popular_itemW of popularWeek){let e=popular_itemW.querySelector('.series > img').getAttribute('src'),t=popular_itemW.querySelector('.leftseries > h2 > .series').innerHTML,l=popular_itemW.querySelector('.series').href;e=new ModuleRequest(e,'get',emptyKeyValue,null),l=new ModuleRequest(l,'get',emptyKeyValue,null),dataArrayP.push(quickData(l,e,t,''))}output.push(new Output(CellDesings.Special1,Orientation.horizontal,DefaultLayouts.triplets,Paging.leading,new Section('Popular This Week',!0),null,dataArrayP));let latest=document.querySelectorAll('.listupd')[1].querySelectorAll('.utao'),dataArrayL=[];for(latest_item of latest){let e=latest_item.querySelector('img').getAttribute('src'),t=latest_item.querySelector('a').getAttribute('title'),l=latest_item.querySelector('a').href;e=new ModuleRequest(e,'get',emptyKeyValue,null),l=new ModuleRequest(l,'get',emptyKeyValue,null),dataArrayL.push(quickData(l,e,t,''))}let MainPageObject=new MainPage(new ModuleRequest('','get',emptyKeyValue,null),new Extra([new Commands('',emptyKeyValue)],emptyKeyValue),new JavascriptConfig(!0,!1,''),output);output.push(new Output(CellDesings.normal3,Orientation.horizontal,DefaultLayouts.longTripletsDouble,Paging.leading,new Section('Recently Updated',!0),null,dataArrayL));var finalJson=JSON.stringify(MainPageObject);savedData.innerHTML=finalJson; /* JAVASCRIPT ENDS */ } catch (e) { console.log(e.message); if (typeof KETSU_ASYNC !== 'undefined') { window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage(''); } }"
      },
      "output": [
        {
          "cellDesing": "normal1",
          "orientation": "vertical",
          "defaultLayout": "wide",
          "paging": "",
          "section": {
            "sectionName": "",
            "separator": false
          },
          "layout": {
            "insets": {
              "top": 0,
              "bottom": 0,
              "left": 0,
              "right": 0
            },
            "visibleCellsWidthS": 2,
            "visibleCellsWidthM": 2,
            "visibleCellsWidthL": 2,
            "visibleCellsHeight": 2,
            "heightForVisibleCells": 400,
            "cellSize": {
              "width": 300,
              "height": 300
            },
            "ratio": {
              "inRelation": "width",
              "number1": 1,
              "number2": 2
            },
            "constant": {
              "width": 1,
              "height": 2
            },
            "horizontalSpacing": 0,
            "verticalSpacing": 0
          },
          "data": [
            {
              "image": {
                "url": "",
                "method": "get",
                "headers": [
                  {
                    "key": "",
                    "value": ""
                  }
                ],
                "httpBody": null
              },
              "title": "",
              "description": "",
              "field1": "",
              "field2": "",
              "field3": "",
              "field4": "",
              "openInWebView" : false,
              "isChapter": false,
              "link": {
                "url": "",
                "method": "",
                "headers": [
                  {
                    "key": "",
                    "value": ""
                  }
                ],
                "httpBody": null
              }
            }
          ]
        }
      ]
    }
  ],
  "search": [
    {
      "request": {
        "url": "https://asuracomics.com/?s=<searched>",
        "method": "get",
        "headers": [
          {
            "key": "",
            "value": ""
          }
        ],
        "httpBody": null
      },
      "separator": "+",
      "extra": {
        "commands": [
          {
            "commandName": "",
            "params": [
              {
                "key": "",
                "value": ""
              }
            ]
          }
        ],
        "extraInfo": [
          {
            "key": "",
            "value": ""
          }
        ]
      },
      "javascriptConfig": {
        "removeJavascript": true,
        "loadInWebView": false,
        "javaScript": "const DefaultLayouts = { ultraWideFull : 'ultraWideFull', ultraWide : 'ultraWide', wideFull : 'wideFull', wide : 'wide', wideStrechedFull : 'wideStrechedFull', wideStrechedFullDouble : 'WideStrechedFullDouble', wideStreched : 'wideStreched', wideStrechedDouble : 'wideStrechedDouble', wideStrechedFullList : 'wideStrechedFullList', wideStrechedList : 'wideStrechedList', doublets : 'doublets', doubletsDouble : 'doubletsDouble', doubletsFull : 'doubletsFull', doubletsFullDouble : 'doubletsFullDouble', doubletsConstant : 'doubletsConstant', doubletsDoubleConstant : 'doubletsDoubleConstant', doubletsFullConstant : 'doubletsFullConstant', doubletsFullDoubleConstant : 'doubletsFullDoubleConstant', longDoublets : 'longDoublets', longDoubletsDouble : 'longDoubletsDouble', longDoubletsFull : 'longDoubletsFull', longDoubletsFullDouble : 'longDoubletsFullDouble', longDoubletsConstant : 'longDoubletsConstant', longDoubletsDoubleConstant : 'longDoubletsDoubleConstant', longDoubletsFullConstant : 'longDoubletsFullConstant', longDoubletsFullDoubleConstant : 'longDoubletsFullDoubleConstant', triplets : 'triplets', tripletsDouble : 'tripletsDouble', tripletsFull : 'tripletsFull', tripletsFullDouble : 'tripletsFullDouble', tripletsConstant : 'tripletsConstant', tripletsDoubleConstant : 'tripletsDoubleConstant', tripletsFullConstant : 'tripletsFullConstant', tripletsFullDoubleConstant : 'tripletsFullDoubleConstant', longTriplets : 'longTriplets', longTripletsDouble : 'longTripletsDouble', longTripletsFull : 'longTripletsFull', longTripletsFullDouble : 'longTripletsFullDouble', longTripletsConstant : 'longTripletsConstant', longTripletsDoubleConstant : 'longTripletsDoubleConstant', longTripletsFullConstant : 'longTripletsFullConstant', longTripletsFullDoubleConstant : 'longTripletsFullDoubleConstant', none: '' }; const CellDesings = { Special1 : 'Special1', Special2 : 'Special2', Special3 : 'Special3', CELLHelperText : 'CELLHelperText', small1 : 'small1', small2 : 'small2', normal1 : 'normal1', normal2 : 'normal2', normal3 : 'normal3', normal4 : 'normal4', normal5 : 'normal5', normal6 : 'normal6', normal7 : 'normal7', wide1 : 'wide1', wide2 : 'wide2', wide3 : 'wide3', wide4 : 'wide4', wide5 : 'wide5', wide6 : 'wide6', wide7 : 'wide7', wide8 : 'wide8', wide9 : 'wide9', wide10 : 'wide10', wide11 : 'wide11' }; const Paging = { leading : 'leading', centered : 'centered', none : '' }; const Orientation = { horizontal : 'horizontal', vertical : 'vertical' }; function Search(request,extra,separator,javascriptConfig,output) { this.request = request; this.extra = extra; this.separator = separator; this.javascriptConfig = javascriptConfig; this.output = output; } function ModuleRequest(url,method,headers,httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody; } function Extra(commands,extraInfo) { this.commands = commands; this.extraInfo = extraInfo; } function Commands(commandName,params) { this.commandName = commandName; this.params = params; } function JavascriptConfig(removeJavascript,loadInWebView,javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript; } function KeyValue(key,value) { this.key = key; this.value = value; } function Output(cellDesing,orientation,defaultLayout,paging,section,layout,data) { this.cellDesing = cellDesing; this.orientation = orientation; this.defaultLayout = defaultLayout; this.paging = paging; this.section = section; this.layout = layout; this.data = data; } function Section(sectionName,separator) { this.sectionName = sectionName; this.separator = separator; } function Layout(insets, visibleCellsWidthS,visibleCellsWidthM,visibleCellsWidthL, visibleCellsHeight, heightForVisibleCells, cellSize, ratio, constant, horizontalSpacing, verticalSpacing) { this.insets = insets; this.visibleCellsWidthS = visibleCellsWidthS; this.visibleCellsWidthM = visibleCellsWidthM; this.visibleCellsWidthL = visibleCellsWidthL; this.visibleCellsHeight = visibleCellsHeight; this.heightForVisibleCells = heightForVisibleCells; this.cellSize = cellSize; this.ratio = ratio; this.constant = constant; this.horizontalSpacing = horizontalSpacing; this.verticalSpacing = verticalSpacing; } function Insets(top,bottom,left,right) { this.top = top; this.bottom = bottom; this.left = left; this.right = right; } function Size(width,height) { this.width = width; this.height = height; } function Ratio(inRelation,number1,number2) { this.inRelation = inRelation; this.number1 = number1; this.number2 = number2; } function Data(image,title,description,field1,field2,field3,field4,isChapter,link,openInWebView) { this.image = image; this.title = title; this.description = description; this.field1 = field1; this.field2 = field2; this.field3 = field3; this.field4 = field4; this.isChapter = isChapter; this.link = link; this.openInWebView = openInWebView; } function quickData(link,image,title,field1) { return new Data(image,title,'unknown',field1,'unknown','unknown','unknown',false,link); } function shuffle(a) { var j, x, i; for (i = a.length - 1; i > 0; i--) { j = Math.floor(Math.random() * (i + 1)); x = a[i]; a[i] = a[j]; a[j] = x; } return a; } var savedData = document.getElementById('ketsu-final-data'); var parsedJson = JSON.parse(savedData.innerHTML); let output = []; let emptyKeyValue = [new KeyValue('','')]; var lastAdded = document.querySelector('.listupd').querySelectorAll('.bs'); let lastAddedArray = []; for(var x = 0; x < lastAdded.length; x++) { var last = lastAdded[x]; var image = last.querySelector('img').src; image = new ModuleRequest(image, 'get', emptyKeyValue, null); let title = last.querySelector('.bsx a').title; var link = last.querySelector('.bsx a').href; link = new ModuleRequest(link, 'get', emptyKeyValue, null); var lastchap = 'Recent: ' + last.querySelector('.adds .epxs').textContent.replaceAll('\\n',''); let data = new Data(image, title, lastchap, 'Manwha', '', '', '', false, link); lastAddedArray.push(data); } var testLayout = new Layout(new Insets(10, 10, 10, 10), 1, 2, 3, 1, 500, new Size(400, 400), new Ratio('width', 4, 11), new Size(0, 0), 10, 10); output.push(new Output(CellDesings.wide8, Orientation.vertical, DefaultLayouts.none, Paging.none, new Section('', false), testLayout, lastAddedArray)); let searchPageObject = new Search(new ModuleRequest('', '', emptyKeyValue, null), new Extra([new Commands('', emptyKeyValue)], emptyKeyValue), '', new JavascriptConfig(false, false, ''), output); var finalJson = JSON.stringify(searchPageObject); savedData.innerHTML = finalJson;"
      },
      "output": [
        {
          "cellDesing": "normal1",
          "orientation": "vertical",
          "defaultLayout": "wide",
          "paging": "",
          "section": {
            "sectionName": "",
            "separator": false
          },
          "layout": {
            "insets": {
              "top": 0,
              "bottom": 0,
              "left": 0,
              "right": 0
            },
            "visibleCellsWidthS": 2,
            "visibleCellsWidthM": 2,
            "visibleCellsWidthL": 2,
            "visibleCellsHeight": 2,
            "heightForVisibleCells": 400,
            "cellSize": {
              "width": 300,
              "height": 300
            },
            "ratio": {
              "inRelation": "width",
              "number1": 1,
              "number2": 2
            },
            "constant": {
              "width": 1,
              "height": 2
            },
            "horizontalSpacing": 0,
            "verticalSpacing": 0
          },
          "data": [
            {
              "image": {
                "url": "",
                "method": "get",
                "headers": [
                  {
                    "key": "",
                    "value": ""
                  }
                ],
                "httpBody": null
              },
              "title": "",
              "description": "",
              "field1": "",
              "field2": "",
              "field3": "",
              "field4": "",
              "openInWebView" : false,
              "isChapter": false,
              "link": {
                "url": "empty",
                "method": "get",
                "headers": [
                  {
                    "key": "key",
                    "value": "value"
                  }
                ],
                "httpBody": null
              }
            }
          ]
        }
      ]
    }
  ],
  "info": [
    {
      "request": {
        "url": "",
        "method": "get",
        "headers": [
          {
            "key": "",
            "value": ""
          }
        ],
        "httpBody": null
      },
      "extra": {
        "commands": [
          {
            "commandName": "",
            "params": [
              {
                "key": "",
                "value": ""
              }
            ]
          }
        ],
        "extraInfo": [
          {
            "key": "",
            "value": ""
          }
        ]
      },
      "javascriptConfig": {
        "removeJavascript": true,
        "loadInWebView": false,
        "javaScript": "try { /* JAVASCRIPT STARTS */ function Info(request, extra, javascriptConfig, output) { this.request = request; this.extra = extra; this.javascriptConfig = javascriptConfig; this.output = output;}function ModuleRequest(url, method, headers, httpBody) { this.url = url; console.log(this.url); this.method = method; this.headers = headers; this.httpBody = httpBody;}function Extra(commands, extraInfo) { this.commands = commands; this.extraInfo = extraInfo;}function Commands(commandName, params) { this.commandName = commandName; this.params = params;}function JavascriptConfig(removeJavascript, loadInWebView, javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript;}function KeyValue(key, value) { this.key = key; this.value = value;}function Chapter(chapName, link, openInWebView) { this.chapName = chapName; this.link = link; this.openInWebView = openInWebView;}function Output(image, title, link, description, genres, field1, field2, field3, field4, chapters) { this.image = image; this.link = link; this.title = title; this.description = description; this.genres = genres; this.field1 = field1; this.field2 = field2; this.field3 = field3; this.field4 = field4; this.chapters = chapters;}function getStuff(array, match) { for (var x = 0; x < array.length; x++) { let data = array[x].innerText; if (data.includes(match)) { return data.replace(match, '').trim(); } }}function getHtmlStuff(array, match) { for (var x = 0; x < array.length; x++) { let data = array[x].innerText; if (data.includes(match)) { return array[x]; } }}var savedData = document.getElementById('ketsu-final-data');var parsedJson = JSON.parse(savedData.innerHTML);let emptyKeyValue = [new KeyValue('', '')];var episodes = [];var type = document.querySelector('div.tsinfo > div:nth-child(2) a').textContent;var status = document.querySelector('div.tsinfo > div:nth-child(1) i').textContent;var genres = [];genres = Array.from(document.querySelectorAll('.wd-full a')).map(g => g.textContent);var desc;try { desc = document.querySelector('[itemprop=\"depion\"]').textContent.replaceAll('\\n','').trim();} catch{}var title = document.querySelector('.entry-title').textContent.trim();var image = document.querySelector('.thumb img').src;image = new ModuleRequest(image, 'get', emptyKeyValue, null);var chapters = document.querySelector('.clstyle').querySelectorAll('li');for (var i = chapters.length - 1; i >= 0; i--) { var element = chapters[i]; var fixedLink = element.querySelector('a').href; let chapter = new Chapter('Chapter ' + (chapters.length - i), new ModuleRequest(fixedLink, 'get', emptyKeyValue, null), false); episodes.push(chapter);}let infoPageObject = new Info(new ModuleRequest('', '', emptyKeyValue, null), new Extra([new Commands('', emptyKeyValue)], emptyKeyValue), new JavascriptConfig(false, false, ''), new Output(image, title, parsedJson.request, desc, genres, status, type, '', 'Chapters : ' + episodes.length, episodes));var finalJson = JSON.stringify(infoPageObject);savedData.innerHTML = finalJson; /* JAVASCRIPT ENDS */ } catch (e) { console.log(e.message); console.log('AAAAAAAAAAAAAAAAAAAA'); if (typeof KETSU_ASYNC !== 'undefined') { window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage(''); } }"
      },
      "output": {
        "image": {
          "url": "",
          "method": "get",
          "headers": [
            {
              "key": "",
              "value": ""
            }
          ],
          "httpBody": null
        },
        "link": {
          "url": "",
          "method": "get",
          "headers": [
            {
              "key": "",
              "value": ""
            }
          ],
          "httpBody": null
        },
        "title": "",
        "description": "",
        "genres": [
          ""
        ],
        "field1": "",
        "field2": "",
        "field3": "",
        "field4": "",
        "chapters": [
          {
            "chapName": "",
            "openInWebView": false,
            "link": {
              "url": "empty",
              "method": "get",
              "headers": [
                {
                  "key": "key",
                  "value": "value"
                }
              ],
              "httpBody": null
            }
          }
        ]
      }
    }
  ],
  "chapters": [
    {
      "request": {
        "url": "",
        "method": "get",
        "headers": [
          {
            "key": "key",
            "value": "value"
          }
        ],
        "httpBody": null
      },
      "extra": {
        "commands": [
          {
            "commandName": "",
            "params": [
              {
                "key": "",
                "value": ""
              }
            ]
          }
        ],
        "extraInfo": [
          {
            "key": "",
            "value": ""
          }
        ]
      },
      "javascriptConfig": {
        "removeJavascript": true,
        "loadInWebView": false,
        "javaScript": "function Chapters(e,t,i,s){this.request=e,this.extra=t,this.javascriptConfig=i,this.output=s}function ModuleRequest(e,t,i,s){this.url=e,this.method=t,this.headers=i,this.httpBody=s}function Extra(e,t){this.commands=e,this.extraInfo=t}function Commands(e,t){this.commandName=e,this.params=t}function JavascriptConfig(e,t,i){this.removeJavascript=e,this.loadInWebView=t,this.javaScript=i}function KeyValue(e,t){this.key=e,this.value=t}function Output(e,t,i){this.videos=e,this.images=t,this.text=i}function Videos(e,t){this.needsResolver=e,this.rawVideo=t}function NeedsResolver(e,t){this.resolverIdentifier=e,this.link=t}function RawVideo(e){this.video=e}function Video(e,t){this.videoQuality=e,this.videoLink=t}function Text(e){this.text=e}for(var output=[],savedData=document.getElementById('ketsu-final-data'),parsedJson=JSON.parse(savedData.innerHTML),emptyKeyValue=[new KeyValue('','')],images=document.querySelectorAll('#readerarea img'),x=0;x<images.length;x++){var img=images[x].src;output.push(new ModuleRequest(img,'get',emptyKeyValue,null))}let emptyExtra=new Extra([new Commands('',emptyKeyValue)],emptyKeyValue);var chaptersObject=new Chapters(new ModuleRequest('','',emptyKeyValue,null),emptyExtra,new JavascriptConfig(!1,!1,''),new Output(null,output,null)),finalJson=JSON.stringify(chaptersObject);savedData.innerHTML=finalJson;"
      },
      "output": {
        "videos": {
          "needsResolver": [
            {
              "resolverIdentifier": "",
              "link": {
                "url": "",
                "method": "get",
                "headers": [
                  {
                    "key": "key",
                    "value": "value"
                  }
                ],
                "httpBody": null
              }
            }
          ],
          "rawVideo": [
            {
              "video": [
                {
                  "videoQuality": "",
                  "videoLink": {
                    "url": "http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4",
                    "method": "get",
                    "headers": [
                      {
                        "key": "key",
                        "value": "value"
                      }
                    ],
                    "httpBody": null
                  }
                }
              ]
            }
          ]
        },
        "images": [
          {
            "url": "empty",
            "method": "get",
            "headers": [
              {
                "key": "key",
                "value": "value"
              }
            ],
            "httpBody": null
          }
        ],
        "text": {
          "text": ""
        }
      }
    }
  ],
  "moduleResolvers": [
    {
      "resolverInfo": {
        "resolverName": "",
        "nameMatches": [
          ""
        ],
        "developer": "",
        "moduleID": "",
        "resolverVersion": 1,
        "baseURL": ""
      },
      "resolver": [
        {
          "request": {
            "url": "",
            "method": "get",
            "headers": [
              {
                "key": "key",
                "value": "value"
              }
            ],
            "httpBody": null
          },
          "extra": {
            "commands": [
              {
                "commandName": "",
                "params": [
                  {
                    "key": "",
                    "value": ""
                  }
                ]
              }
            ],
            "extraInfo": [
              {
                "key": "",
                "value": ""
              }
            ]
          },
          "javascriptConfig": {
            "removeJavascript": false,
            "loadInWebView": false,
            "javaScript": ""
          },
          "output": {
            "moduleID": "",
            "video": [
              {
                "videoQuality": "720",
                "videoLink": {
                  "url": "http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4",
                  "method": "get",
                  "headers": [
                    {
                      "key": "key",
                      "value": "value"
                    }
                  ],
                  "httpBody": null
                }
              }
            ]
          }
        }
      ]
    }
  ],
  "responseCodeFunctions": [
    {
      "code": 0,
      "msgTitle": "",
      "msgBody": "",
      "type": "normal",
      "functions": [
        {
          "request": {
            "url": "empty",
            "method": "get",
            "headers": [
              {
                "key": "key",
                "value": "value"
              }
            ],
            "httpBody": null
          },
          "extra": {
            "commands": [
              {
                "commandName": "",
                "params": [
                  {
                    "key": "",
                    "value": ""
                  }
                ]
              }
            ],
            "extraInfo": [
              {
                "key": "",
                "value": ""
              }
            ]
          },
          "javascriptConfig": {
            "removeJavascript": true,
            "loadInWebView": false,
            "javaScript": ""
          }
        }
      ]
    }
  ],
  "helperFunctions": [
    {
      "functionName": "example",
      "msgTitle": "",
      "msgBody": "",
      "type": "normal",
      "functions": [
        {
          "request": {
            "url": "empty",
            "method": "get",
            "headers": [
              {
                "key": "key",
                "value": "value"
              }
            ],
            "httpBody": null
          },
          "extra": {
            "commands": [
              {
                "commandName": "",
                "params": [
                  {
                    "key": "",
                    "value": ""
                  }
                ]
              }
            ],
            "extraInfo": [
              {
                "key": "",
                "value": ""
              }
            ]
          },
          "javascriptConfig": {
            "removeJavascript": true,
            "loadInWebView": false,
            "javaScript": "const DefaultLayouts = { ultraWideFull: 'ultraWideFull', ultraWide: 'ultraWide', wideFull: 'wideFull', wide: 'wide', wideStrechedFull: 'wideStrechedFull', wideStrechedFullDouble: 'WideStrechedFullDouble', wideStreched: 'wideStreched', wideStrechedDouble: 'wideStrechedDouble', wideStrechedFullList: 'wideStrechedFullList', wideStrechedList: 'wideStrechedList', doublets: 'doublets', doubletsDouble: 'doubletsDouble', doubletsFull: 'doubletsFull', doubletsFullDouble: 'doubletsFullDouble', doubletsConstant: 'doubletsConstant', doubletsDoubleConstant: 'doubletsDoubleConstant', doubletsFullConstant: 'doubletsFullConstant', doubletsFullDoubleConstant: 'doubletsFullDoubleConstant', longDoublets: 'longDoublets', longDoubletsDouble: 'longDoubletsDouble', longDoubletsFull: 'longDoubletsFull', longDoubletsFullDouble: 'longDoubletsFullDouble', longDoubletsConstant: 'longDoubletsConstant', longDoubletsDoubleConstant: 'longDoubletsDoubleConstant', longDoubletsFullConstant: 'longDoubletsFullConstant', longDoubletsFullDoubleConstant: 'longDoubletsFullDoubleConstant', triplets: 'triplets', tripletsDouble: 'tripletsDouble', tripletsFull: 'tripletsFull', tripletsFullDouble: 'tripletsFullDouble', tripletsConstant: 'tripletsConstant', tripletsDoubleConstant: 'tripletsDoubleConstant', tripletsFullConstant: 'tripletsFullConstant', tripletsFullDoubleConstant: 'tripletsFullDoubleConstant', longTriplets: 'longTriplets', longTripletsDouble: 'longTripletsDouble', longTripletsFull: 'longTripletsFull', longTripletsFullDouble: 'longTripletsFullDouble', longTripletsConstant: 'longTripletsConstant', longTripletsDoubleConstant: 'longTripletsDoubleConstant', longTripletsFullConstant: 'longTripletsFullConstant', longTripletsFullDoubleConstant: 'longTripletsFullDoubleConstant', none: ''};const CellDesings = { Special1: 'Special1', Special2: 'Special2', Special3: 'Special3', CELLHelperText: 'CELLHelperText', small1: 'small1', small2: 'small2', normal1: 'normal1', normal2: 'normal2', normal3: 'normal3', normal4: 'normal4', normal5: 'normal5', normal6: 'normal6', normal7: 'normal7', wide1: 'wide1', wide2: 'wide2', wide3: 'wide3', wide4: 'wide4', wide5: 'wide5', wide6: 'wide6', wide7: 'wide7', wide8: 'wide8', wide9: 'wide9', wide10: 'wide10', wide11: 'wide11'};const Paging = { leading: 'leading', centered: 'centered', none: ''};const Orientation = { horizontal: 'horizontal', vertical: 'vertical'};function MainPage(request, extra, javascriptConfig, output) { this.request = request; this.extra = extra; this.javascriptConfig = javascriptConfig; this.output = output;}function ModuleRequest(url, method, headers, httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody;}function Extra(commands, extraInfo) { this.commands = commands; this.extraInfo = extraInfo;}function Commands(commandName, params) { this.commandName = commandName; this.params = params;}function JavascriptConfig(removeJavascript, loadInWebView, javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript;}function KeyValue(key, value) { this.key = key; this.value = value;}function Output(cellDesing, orientation, defaultLayout, paging, section, layout, data) { this.cellDesing = cellDesing; this.orientation = orientation; this.defaultLayout = defaultLayout; this.paging = paging; this.section = section; this.layout = layout; this.data = data;}function Section(sectionName, separator) { this.sectionName = sectionName; this.separator = separator;}function Layout(insets, visibleCellsWidthS, visibleCellsWidthM, visibleCellsWidthL, visibleCellsHeight, heightForVisibleCells, cellSize, ratio, constant, horizontalSpacing, verticalSpacing) { this.insets = insets; this.visibleCellsWidthS = visibleCellsWidthS; this.visibleCellsWidthM = visibleCellsWidthM; this.visibleCellsWidthL = visibleCellsWidthL; this.visibleCellsHeight = visibleCellsHeight; this.heightForVisibleCells = heightForVisibleCells; this.cellSize = cellSize; this.ratio = ratio; this.constant = constant; this.horizontalSpacing = horizontalSpacing; this.verticalSpacing = verticalSpacing;}function Insets(top, bottom, left, right) { this.top = top; this.bottom = bottom; this.left = left; this.right = right;}function Size(width, height) { this.width = width; this.height = height;}function Ratio(inRelation, number1, number2) { this.inRelation = inRelation; this.number1 = number1; this.number2 = number2;}function Data(image, title, description, field1, field2, field3, field4, isChapter, link, openInWebView) { this.image = image; this.title = title; this.description = description; this.field1 = field1; this.field2 = field2; this.field3 = field3; this.field4 = field4; this.isChapter = isChapter; this.link = link; this.openInWebView = openInWebView;}function quickData(link, image, title, field1) { return new Data(image, title, 'unknown', field1, 'unknown', 'unknown', 'unknown', false, link);}function shuffle(a) { var j, x, i; for (i = a.length - 1; i > 0; i--) { j = Math.floor(Math.random() * (i + 1)); x = a[i]; a[i] = a[j]; a[j] = x; } return a;}var savedData = document.getElementById('ketsu-final-data');var parsedJson = JSON.parse(savedData.innerHTML);let output = [];var emptyKeyValue = [new KeyValue('', '')];const pop = [];popchap = document.querySelectorAll('.hothome div.bs'); for (list of popchap) { let title = list.querySelector('.tt').textContent; var link = list.querySelector('a').href; link = new ModuleRequest(link, 'get', emptyKeyValue, null); var image = list.querySelector('img').src; image = new ModuleRequest(image, 'get', emptyKeyValue, null); var ep = list.querySelector('.epxs').textContent; pop.push(new Data(image, title, '', ep, '', '', '', false, link)); } const lastchap = []; lastchapchap = document.querySelectorAll('div.uta'); for (list of lastchapchap) { let title = list.querySelector('h4').textContent; var link = list.querySelector('a').href; link = new ModuleRequest(link, 'get', emptyKeyValue, null); var image = list.querySelector('img').src; image = new ModuleRequest(image, 'get', emptyKeyValue, null); var ep =''; try { ep = list.querySelector('ul li').innerText.split('\\n')[0]; } catch{} lastchap.push(new Data(image, title, '', ep, '', '', '', false, link)); } const commands = [ new Commands('variable', [ new KeyValue('data_pop', pop), new KeyValue('data_last', lastchap), new KeyValue('current', parsedJson.request.url) ])];let MainPageObject = new MainPage(new ModuleRequest('', 'get', emptyKeyValue, null), new Extra('', emptyKeyValue), new JavascriptConfig(true, false, ''), output);var finalJson = JSON.stringify(MainPageObject);savedData.innerHTML = finalJson;"
          }
        }
      ]
    }
  ]
}
